"use client"

import { useState } from "react"
import { Layout, Input, Button, Card, Collapse, Breadcrumb } from "antd"
import { SearchOutlined, RightOutlined } from "@ant-design/icons"
import Header from "./header"

const { Content } = Layout
const { Panel } = Collapse

const FAQPage = () => {
    const [searchValue, setSearchValue] = useState("")
    const [selectedCategory, setSelectedCategory] = useState(null)

    // Breadcrumb items
    const breadcrumbItems = [
        {
            title: (
                <span
                    style={{
                        backgroundColor: "#e61e43",
                        color: "white",
                        padding: "4px 12px",
                        borderRadius: "4px",
                        fontSize: "12px",
                    }}
                >
                    Trang ch·ªß
                </span>
            ),
            href: "/"
        },
        {
            title: (
                <span
                    style={{
                        backgroundColor: "#e61e43",
                        color: "white",
                        padding: "4px 12px",
                        borderRadius: "4px",
                        fontSize: "12px",
                    }}
                >
                    Trung t√¢m h·ªó tr·ª£
                </span>
            ),
            href: "/faq"
        },
    ]

    // FAQ categories
    const faqCategories = [
        { title: "T√†i kho·∫£n ScanMe", icon: "üë§" },
        { title: "ƒê·∫∑t h√†ng ScanMe", icon: "üõí" },
        { title: "Thanh to√°n ScanMe", icon: "üí≥" },
        { title: "Li√™n h·ªá ScanMe", icon: "üìû" },
    ]

    // FAQ questions with completed answers
    const faqQuestions = [
        {
            key: "1",
            question: "ScanMe l√† g√¨?",
            answer: "ScanMe l√† n·ªÅn t·∫£ng gi√∫p ng∆∞·ªùi d√πng t√¨m v√† s·ª≠ d·ª•ng c√°c voucher t·ª´ c·ª≠a h√†ng m·ªôt c√°ch d·ªÖ d√†ng, nhanh ch√≥ng.",
            category: "T√†i kho·∫£n ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "2",
            question: "L√†m th·∫ø n√†o ƒë·ªÉ t·∫°o t√†i kho·∫£n ScanMe?",
            answer: "B·∫°n c√≥ th·ªÉ ƒëƒÉng k√Ω b·∫±ng email, s·ªë ƒëi·ªán tho·∫°i ho·∫∑c ƒëƒÉng nh·∫≠p nhanh qua Google/Facebook tr√™n trang ch√≠nh.",
            category: "T√†i kho·∫£n ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "3",
            question: "T√¥i qu√™n m·∫≠t kh·∫©u ScanMe th√¨ l√†m sao?",
            answer: "B·∫°n ch·ªçn 'Qu√™n m·∫≠t kh·∫©u' v√† l√†m theo h∆∞·ªõng d·∫´n ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u qua email ho·∫∑c s·ªë ƒëi·ªán tho·∫°i.",
            category: "T√†i kho·∫£n ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "4",
            question: "ScanMe c√≥ m·∫•t ph√≠ s·ª≠ d·ª•ng kh√¥ng?",
            answer: "Ng∆∞·ªùi d√πng c√° nh√¢n ƒë∆∞·ª£c s·ª≠ d·ª•ng mi·ªÖn ph√≠. ƒê·ªëi t√°c c√≥ th·ªÉ ch·ªçn g√≥i n√¢ng c·∫•p ƒë·ªÉ qu·∫£ng b√° hi·ªáu qu·∫£ h∆°n.",
            category: "T√†i kho·∫£n ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "5",
            question: "L√†m sao ƒë·ªÉ t√¨m voucher theo v·ªã tr√≠?",
            answer: "ScanMe s·ª≠ d·ª•ng ƒë·ªãnh v·ªã ƒë·ªÉ hi·ªÉn th·ªã c√°c ∆∞u ƒë√£i g·∫ßn b·∫°n. H√£y b·∫≠t GPS ƒë·ªÉ tr·∫£i nghi·ªám t√≠nh nƒÉng n√†y.",
            category: "ƒê·∫∑t h√†ng ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "6",
            question: "C√°ch s·ª≠ d·ª•ng voucher khi ƒë·∫∑t h√†ng?",
            answer: "Ch·ªçn s·∫£n ph·∫©m b·∫°n mu·ªën, th√™m v√†o gi·ªè h√†ng v√† √°p d·ª•ng m√£ voucher trong b∆∞·ªõc thanh to√°n.",
            category: "ƒê·∫∑t h√†ng ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "7",
            question: "T√¥i c√≥ th·ªÉ ƒë·∫∑t h√†ng nhi·ªÅu voucher c√πng l√∫c kh√¥ng?",
            answer: "T√πy theo c·ª≠a h√†ng, b·∫°n c√≥ th·ªÉ √°p d·ª•ng nhi·ªÅu voucher n·∫øu ƒë√°p ·ª©ng ƒëi·ªÅu ki·ªán khuy·∫øn m√£i.",
            category: "ƒê·∫∑t h√†ng ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "8",
            question: "ScanMe c√≥ giao h√†ng kh√¥ng?",
            answer: "ScanMe kh√¥ng tr·ª±c ti·∫øp giao h√†ng. ƒê∆°n h√†ng s·∫Ω ƒë∆∞·ª£c chuy·ªÉn cho c·ª≠a h√†ng ƒë·ªÉ x·ª≠ l√Ω v√† v·∫≠n chuy·ªÉn.",
            category: "ƒê·∫∑t h√†ng ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "9",
            question: "T√¥i c√≥ th·ªÉ thanh to√°n b·∫±ng h√¨nh th·ª©c n√†o?",
            answer: "B·∫°n c√≥ th·ªÉ thanh to√°n khi nh·∫≠n h√†ng (COD) ho·∫∑c chuy·ªÉn kho·∫£n theo th√¥ng tin c·ª≠a h√†ng cung c·∫•p.",
            category: "Thanh to√°n ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "10",
            question: "ScanMe c√≥ h·ªó tr·ª£ thanh to√°n online kh√¥ng?",
            answer: "Hi·ªán t·∫°i ScanMe kh√¥ng h·ªó tr·ª£ thanh to√°n tr·ª±c ti·∫øp. B·∫°n thanh to√°n theo h∆∞·ªõng d·∫´n t·ª´ c·ª≠a h√†ng.",
            category: "Thanh to√°n ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "11",
            question: "T√¥i c√≥ th·ªÉ y√™u c·∫ßu ho√†n ti·ªÅn qua ScanMe kh√¥ng?",
            answer: "B·∫°n c·∫ßn li√™n h·ªá tr·ª±c ti·∫øp v·ªõi c·ª≠a h√†ng ƒë·ªÉ x·ª≠ l√Ω ho√†n ti·ªÅn n·∫øu c√≥ ph√°t sinh.",
            category: "Thanh to√°n ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "12",
            question: "T√¥i b·ªã tr·ª´ ti·ªÅn nh∆∞ng ch∆∞a nh·∫≠n h√†ng th√¨ x·ª≠ l√Ω th·∫ø n√†o?",
            answer: "Vui l√≤ng li√™n h·ªá c·ª≠a h√†ng ƒë√£ b√°n h√†ng cho b·∫°n. ScanMe kh√¥ng gi·ªØ ti·ªÅn n√™n kh√¥ng th·ªÉ ho√†n ti·ªÅn tr·ª±c ti·∫øp.",
            category: "Thanh to√°n ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "13",
            question: "T√¥i mu·ªën li√™n h·ªá h·ªó tr·ª£ t·ª´ ScanMe th√¨ l√†m sao?",
            answer: "B·∫°n c√≥ th·ªÉ d√πng ch·ª©c nƒÉng chat h·ªó tr·ª£ trong app ho·∫∑c g·ªçi hotline ƒë∆∞·ª£c hi·ªÉn th·ªã ·ªü trang ch·ªß.",
            category: "Li√™n h·ªá ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "14",
            question: "L√†m sao ƒë·ªÉ ph·∫£n h·ªìi ƒë√°nh gi√° c·ª≠a h√†ng?",
            answer: "Sau khi ho√†n t·∫•t ƒë∆°n h√†ng, b·∫°n c√≥ th·ªÉ ƒë·ªÉ l·∫°i ƒë√°nh gi√° tr√™n h·ªá th·ªëng ƒë·ªÉ chia s·∫ª tr·∫£i nghi·ªám.",
            category: "Li√™n h·ªá ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "15",
            question: "T√¥i c√≥ th·ªÉ xem l·ªãch s·ª≠ ƒë∆°n h√†ng ·ªü ƒë√¢u?",
            answer: "Truy c·∫≠p m·ª•c 'L·ªãch s·ª≠ ƒë∆°n h√†ng' trong h·ªì s∆° c√° nh√¢n ƒë·ªÉ theo d√µi c√°c ƒë∆°n ƒë√£ ƒë·∫∑t.",
            category: "ƒê·∫∑t h√†ng ScanMe",
            link: "Xem th√™m"
        },
        {
            key: "16",
            question: "T√¥i mu·ªën li√™n h·ªá tr·ª±c ti·∫øp c·ª≠a h√†ng?",
            answer: "Trong chi ti·∫øt voucher ho·∫∑c ƒë∆°n h√†ng s·∫Ω c√≥ s·ªë ƒëi·ªán tho·∫°i v√† ƒë·ªãa ch·ªâ c·ª≠a h√†ng ƒë·ªÉ b·∫°n li√™n h·ªá tr·ª±c ti·∫øp.",
            category: "Li√™n h·ªá ScanMe",
            link: "Xem th√™m"
        },
    ]

    // Filter FAQs based on search value and selected category
    const filteredFAQs = faqQuestions.filter(faq => {
        const matchesSearch = faq.question.toLowerCase().includes(searchValue.toLowerCase())
        const matchesCategory = selectedCategory ? faq.category === selectedCategory : true
        return matchesSearch && matchesCategory
    })

    // Split filtered FAQs into two columns
    const leftColumnFAQs = filteredFAQs.filter((_, index) => index % 2 === 0)
    const rightColumnFAQs = filteredFAQs.filter((_, index) => index % 2 === 1)

    return (
        <Layout style={{ minHeight: "100vh", backgroundColor: "#f5f5f5" }}>
            <Header />

            <Content style={{ marginTop: 64, padding: "20px" }}>
                <div style={{ maxWidth: 1200, margin: "0 auto" }}>
                    {/* Breadcrumb */}
                    <div style={{ marginBottom: 20 }}>
                        <Breadcrumb items={breadcrumbItems} />
                    </div>

                    {/* Search Section */}
                    <div
                        style={{
                            display: "flex",
                            justifyContent: "center",
                            marginBottom: 30,
                            gap: 10,
                        }}
                    >
                        <Input
                            placeholder="T√¨m ki·∫øm c√¢u h·ªèi"
                            value={searchValue}
                            onChange={(e) => setSearchValue(e.target.value)}
                            style={{
                                maxWidth: 600,
                                height: 45,
                                borderRadius: "8px 0 0 8px",
                                border: "1px solid #d9d9d9",
                            }}
                        />
                        <Button
                            type="primary"
                            icon={<SearchOutlined />}
                            style={{
                                height: 45,
                                backgroundColor: "#e61e43",
                                borderColor: "#00AA55",
                                borderRadius: "0 8px 8px 0",
                                paddingLeft: 20,
                                paddingRight: 20,
                            }}
                        >
                            T√¨m ki·∫øm
                        </Button>
                    </div>

                    {/* FAQ Categories */}
                    <div style={{ marginBottom: 40 }}>
                        <h2
                            style={{
                                fontSize: 20,
                                fontWeight: 600,
                                marginBottom: 20,
                                color: "#333",
                            }}
                        >
                            Danh m·ª•c c√¢u h·ªèi
                        </h2>
                        <div
                            style={{
                                display: "grid",
                                gridTemplateColumns: "repeat(auto-fit, minmax(280px, 1fr))",
                                gap: 15,
                            }}
                        >
                            {faqCategories.map((category, index) => (
                                <Card
                                    key={index}
                                    hoverable
                                    style={{
                                        borderRadius: 8,
                                        border: "1px solid #f0f0f0",
                                        cursor: "pointer",
                                        backgroundColor: selectedCategory === category.title ? "#e61e43" : "white",
                                    }}
                                    bodyStyle={{
                                        padding: "16px 20px",
                                        display: "flex",
                                        alignItems: "center",
                                        justifyContent: "space-between",
                                    }}
                                    onClick={() => setSelectedCategory(category.title === selectedCategory ? null : category.title)}
                                >
                                    <div style={{ display: "flex", alignItems: "center", gap: 12 }}>
                                        <span style={{ fontSize: 18 }}>{category.icon}</span>
                                        <span style={{
                                            fontSize: 14,
                                            color: selectedCategory === category.title ? "white" : "#333"
                                        }}>
                                            {category.title}
                                        </span>
                                    </div>
                                </Card>
                            ))}
                        </div>
                    </div>

                    {/* FAQ Questions */}
                    <div>
                        <h2
                            style={{
                                fontSize: 20,
                                fontWeight: 600,
                                marginBottom: 20,
                                color: "#333",
                            }}
                        >
                            C√¢u h·ªèi th∆∞·ªùng g·∫∑p
                        </h2>

                        {filteredFAQs.length === 0 ? (
                            <p style={{ color: "#666", textAlign: "center" }}>
                                Kh√¥ng t√¨m th·∫•y c√¢u h·ªèi ph√π h·ª£p
                            </p>
                        ) : (
                            <div
                                style={{
                                    display: "grid",
                                    gridTemplateColumns: "repeat(auto-fit, minmax(500px, 1fr))",
                                    gap: 20,
                                }}
                            >
                                {/* Left Column */}
                                <div>
                                    {leftColumnFAQs.map((faq) => (
                                        <Card
                                            key={faq.key}
                                            style={{
                                                marginBottom: 15,
                                                borderRadius: 8,
                                                border: "1px solid #f0f0f0",
                                            }}
                                            bodyStyle={{ padding: 0 }}
                                        >
                                            <Collapse ghost expandIcon={({ isActive }) => <RightOutlined rotate={isActive ? 90 : 0} />}>
                                                <Panel
                                                    header={
                                                        <span
                                                            style={{
                                                                fontSize: 14,
                                                                color: "#333",
                                                                fontWeight: 500,
                                                            }}
                                                        >
                                                            {faq.question}
                                                        </span>
                                                    }
                                                    key={faq.key}
                                                    style={{
                                                        borderBottom: "none",
                                                    }}
                                                >
                                                    <div
                                                        style={{
                                                            padding: "0 24px 16px 24px",
                                                            color: "#666",
                                                            fontSize: 13,
                                                            lineHeight: 1.6,
                                                        }}
                                                    >
                                                        <p>{faq.answer}</p>
                                                        {faq.link && (
                                                            <a
                                                                href="#"
                                                                style={{
                                                                    color: "#1890ff",
                                                                    textDecoration: "none",
                                                                }}
                                                            >
                                                                {faq.link}
                                                            </a>
                                                        )}
                                                    </div>
                                                </Panel>
                                            </Collapse>
                                        </Card>
                                    ))}
                                </div>

                                {/* Right Column */}
                                <div>
                                    {rightColumnFAQs.map((faq) => (
                                        <Card
                                            key={faq.key}
                                            style={{
                                                marginBottom: 15,
                                                borderRadius: 8,
                                                border: "1px solid #f0f0f0",
                                            }}
                                            bodyStyle={{ padding: 0 }}
                                        >
                                            <Collapse ghost expandIcon={({ isActive }) => <RightOutlined rotate={isActive ? 90 : 0} />}>
                                                <Panel
                                                    header={
                                                        <span
                                                            style={{
                                                                fontSize: 14,
                                                                color: "#333",
                                                                fontWeight: 500,
                                                            }}
                                                        >
                                                            {faq.question}
                                                        </span>
                                                    }
                                                    key={faq.key}
                                                    style={{
                                                        borderBottom: "none",
                                                    }}
                                                >
                                                    <div
                                                        style={{
                                                            padding: "0 24px 16px 24px",
                                                            color: "#666",
                                                            fontSize: 13,
                                                            lineHeight: 1.6,
                                                        }}
                                                    >
                                                        <p>{faq.answer}</p>
                                                        {faq.link && (
                                                            <a
                                                                href="#"
                                                                style={{
                                                                    color: "#1890ff",
                                                                    textDecoration: "none",
                                                                }}
                                                            >
                                                                {faq.link}
                                                            </a>
                                                        )}
                                                    </div>
                                                </Panel>
                                            </Collapse>
                                        </Card>
                                    ))}
                                </div>
                            </div>
                        )}
                    </div>
                </div>
            </Content>
        </Layout>
    )
}
export default FAQPage